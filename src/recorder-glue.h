
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__recorder_glue_h__ADAPTOR_MARSHAL_H
#define __dbusxx__recorder_glue_h__ADAPTOR_MARSHAL_H

#include <dbus-c++/dbus.h>

namespace org {
namespace soma {

class Recorder
: public ::DBus::InterfaceAdaptor
{
public:

    Recorder()
    : ::DBus::InterfaceAdaptor("org.soma.Recorder")
    {
        register_method(Recorder, createFile, _createFile_stub);
    }

    ::DBus::IntrospectedInterface* const introspect() const 
    {
        static ::DBus::IntrospectedArgument createFile_args[] = 
        {
            { "filename", "s", true },
            { 0, 0, 0 }
        };
        static ::DBus::IntrospectedMethod Recorder_methods[] = 
        {
            { "createFile", createFile_args },
            { 0, 0 }
        };
        static ::DBus::IntrospectedMethod Recorder_signals[] = 
        {
            { 0, 0 }
        };
        static ::DBus::IntrospectedProperty Recorder_properties[] = 
        {
            { 0, 0, 0, 0 }
        };
        static ::DBus::IntrospectedInterface Recorder_interface = 
        {
            "org.soma.Recorder",
            Recorder_methods,
            Recorder_signals,
            Recorder_properties
        };
        return &Recorder_interface;
    }

public:

    /* properties exposed by this interface, use
     * property() and property(value) to get and set a particular property
     */

public:

    /* methods exported by this interface,
     * you will have to implement them in your ObjectAdaptor
     */
    virtual void createFile( const ::DBus::String& filename ) = 0;

public:

    /* signal emitters for this interface
     */

private:

    /* unmarshalers (to unpack the DBus message before calling the actual interface method)
     */
    ::DBus::Message _createFile_stub( const ::DBus::CallMessage& call )
    {
        ::DBus::MessageIter ri = call.reader();

        ::DBus::String argin1; ri >> argin1;
        createFile(argin1);
        ::DBus::ReturnMessage reply(call);
        return reply;
    }
};

} } 
#endif//__dbusxx__recorder_glue_h__ADAPTOR_MARSHAL_H
