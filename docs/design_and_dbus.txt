The recorder daemon controls all saving of data to the soma system. It
will run under dedicated hardware and attempt best-possible packet
delivery. 

Generally a single experiment will be represented by a single
file. Each experiment is divided up into a number of temporal
epochs. These represent the top-level objects in the HDF5 file.

The dbus interface to the recorder object has the following methods. 

createFile("filename") : creates the requested file
closeFile() : closes the current file

-- epoch manipulation 
createEpoch("epochname")
getCurrentEpoch() : returns current epoch, or None
listAvailableEpochs() : returns a list of available epochs
getEpochDataRX() : returns list of tuples of which epochs are open/closed

-- data type manipulation
enableDataRX(type, src)
disableDataRX(type, src)

-- state manipulation
switchEpoch("epochname")
startRecording()
endRecording()

this closely mirrors the functionality of the H5FileRecorder. The
idea of "epochs", enable/disable, status, etc. are all designed to be
somewhat file-format-neutral. The recorder object interfaces to the h5
file recorder, which takes in the relevant data types and saves them
to disk.

To what degree do we want to be a general file browser? 

There are three components: 
H5FileRecorder: All File and datatype IO
Network : Interface with the network
Recorder: Dbus interface

